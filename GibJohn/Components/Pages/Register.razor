@page "/register"
@using GibJohn.Models
@using GibJohn.Services
@using GibJohn.Utilities
@inject UserService UserService
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject UserSession UserSession
<link rel="stylesheet" href="css/style.css" />

<div class="login">
    <div>
        <label>Username:</label>
        <br>
        <InputText @bind-Value=newUser.Username />
    </div>

    <div>
        <label>Password:</label>
        <br>
        <InputText @bind-Value=newUser.Password type="password" />
    </div>

    <div>
        <label>First Name:</label>
        <br>
        <InputText @bind-Value=newUser.FirstName />
    </div>

    <div>
        <label>Last Name:</label>
        <br>
        <InputText @bind-Value="newUser.LastName" /> 
    </div>

    <div>
        <label>Email Address:</label>
        <br>
        <InputText @bind-Value="newUser.Email" />
    </div>
    <div>
        <label style="color:red">@message</label>
        <label style="color:red">@message2</label>

    </div>
    <button @onclick=@RegisterUser>Register</button>
</div>
@code {
    private User newUser = new User();
    private string message;
    private string message2;
    private bool messages = false;
    private async Task RegisterUser()
    {

        if (UserSession.UserID != 0)
        {
            NavigationManager.NavigateTo("/account");
        }
        if (newUser.Username == null || newUser.FirstName == null || newUser.LastName == null || newUser.Email == null || newUser.Password == null)
        {
            message = "Fill out all inputs";
            messages = true;
        }
        bool usernameTaken = await UserService.CheckUsernameExistsAsync(newUser.Username);
        if (usernameTaken)
        {
            if (messages)

            {
                message2 = "That username is taken";
            }
            else
            {
                message = "That username is taken";
            }
        }
        else
        {
            await UserService.AddUserAsync(newUser);
        }
    }
}
